#!/bin/bash
#
# Simple colorize for bash by means of sed
#
# Copyright 2008 by Andreas Schamanek <andreas@schamanek.net>
# GPL licensed (see end of file) * Use at your own risk!
#
# Usage examples: 
#   tail -f somemaillog | mycolorize white '^From: .*' bell
#   tail -f somemaillog | mycolorize white '^From: \/.*' green 'Folder: .*'
#
# Notes:
#   Regular expressions need to be suitable for _sed_
#   Slashes / need no escaping (we use ^A as delimiter)
#   \/ splits the coloring (similar to procmailrc. Matches behind get color.
#   Even "white 'for \/\(her\|him\).*$'" works :) Surprisingly ;)

# For the colors see tput(1) and terminfo(5)
red=$(tput bold;tput setaf 1)            # bright red text
green=$(tput setaf 2)                    # dim green text
yellow=$(tput bold;tput setaf 3)         # bright yellow text
fawn=$(tput setaf 3)
blue=$(tput bold;tput setaf 4)           # bright blue text
magenta=$(tput setaf 5);
cyan=$(tput bold;tput setaf 6)           # bright cyan text
grey=$(tput setaf 7)                     # dim white text
white=$(tput bold;tput setaf 7)          # bright white text
normal=$(tput sgr0)                      # normal text

red_bg=$(tput setab 1)            # bright red text
green_bg=$(tput setab 2)                    # dim green text
yellow_bg=$(tput setab 3)         # bright yellow text
fawn_bg=$(tput setab 3)
blue_bg=$(tput bold;tput setab 4)           # bright blue text
magenta_bg=$(tput setab 5)
cyan_bg=$(tput setab 6)           # bright cyan text
grey_bg=$(tput setab 7)                     # dim white text
white_bg=$(tput bold;tput setab 7)          # bright white text

default=$(tput sgr0)
bold=$(tput bold)
dim=$(tput dim)
blink=$(tput blink)
reverse=$(tput rev)
hidden=$(tput invis)

for NUM in {16..253}; do
    eval c${NUM}="[38\;5\;${NUM}m"
    eval c${NUM}_bg="[48\;5\;${NUM}m"
done

bell=$(tput bel)                         # bell/beep

# produce separator character ^A (for _sed_)
A=$(echo | tr '\012' '\001')

function lpad {
    word="$1"
    while [ ${#word} -lt $2 ]; do
        word="$3$word";
    done;
    echo "$word";
}

case "$1" in
    --help)
       echo "$0 [--help|--colors] color_spec1 regex1 color_spec2 regex2 .. color_specN regexN" 
       echo
       echo "  color_spec := fg_color[:bg_color][@modifier_list]"
       echo
       echo "  modifier_list := modifier[,modifier]+"
       echo "  modifier      := default|bold|dim|blink|reverse|hidden"
       echo
       echo "Exampe:"
       echo "   tail -f /var/log/messages | $0 red 'SEVERE' yellow 'INFO'"
        ;;
    --colors)
        EMPTY="     ${normal}"
        echo -e "${white}Standard Colors:${normal}" 
        echo
        echo "    red: ${red_bg}${EMPTY} green: ${green_bg}${EMPTY} blue: ${blue_bg}${EMPTY} yellow: ${yellow_bg}${EMPTY}"
        echo "magenta: ${magenta_bg}${EMPTY}  cyan: ${cyan_bg}${EMPTY} grey: ${grey_bg}${EMPTY}  white: ${white_bg}${EMPTY}"
        echo
        echo -e "${white}Extended Colors (256):${normal}" 
        for SEQ in {1..237}; do
            NUM=$((${SEQ}+15))
            ECHO_PARAM="-e"
            if [ ! "$((${SEQ}%6))" -eq "0" ]; then
                ECHO_PARAM="${ECHO_PARAM} -n"
            fi
            COLOR="c${NUM}_bg"
            LABEL=$(lpad "c${NUM}" 4 ' ')
            echo ${ECHO_PARAM} "${LABEL}: ${!COLOR}${EMPTY} "
        done
        echo
        ;;
    *) 
        # compile all rules given at command line to 1 set of rules for SED
        while [ "/$1/" != '//' ] ; do
            color_spec=${1}
            regex=${2}

            shift 2

            fg_color=""
            bg_color=""
            modfiers=""
            beep=""

            # if a beep is requested in the optional 3rd parameter set $beep
            if [ "/$1/" != '//' ] && [[ ( "$1" = 'bell' || "$1" = 'beep' ) ]]; then
              beep=${bell}
              shift
            fi

            # Get modifiers
            if echo ${color_spec} | grep -q "@"; then
                for modifier in $(echo ${color_spec} | cut -d @ -f 2 | tr ',' ' '); do
                    modifiers="${modifiers}${!modifier}"
                done
                color_spec=$(echo ${color_spec} | cut -d @ -f 1)
            fi

            # Get foreground and backgound
            if echo ${color_spec} | grep -q ":"; then
                fg_color=$(echo ${color_spec} | cut -d : -f 1)
                bg_color=$(echo ${color_spec} | cut -d : -f 2)
                bg_color="${bg_color}_bg"
            else
                fg_color=${color_spec}
            fi

            # if the regular expression includes \/ we split the substitution
            if [ "/${regex/*\\\/*/}/" = '//' ] ; then
               regex="${regex/\\\//\)\(}"
               sedrules="${sedrules};s$A\(${regex}\)$A\1${!fg_color}${!bg_color}${modifiers}\2${beep}${normal}${A}g"
            else
               sedrules="${sedrules};s$A\(${regex}\)$A${!fg_color}${!bg_color}${modifiers}\1${beep}${normal}${A}g"
            fi
        done

        # call sed to do the main job
        sed -e "$sedrules"
        ;; 
esac

exit

# License
#
# This script is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This script is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this script; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330,
# Boston, MA  02111-1307  USA

